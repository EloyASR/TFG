name: CI for TFG

on:
  release:
    types: [published]

jobs:
  docker-push-webapp:
    name: Push webapp Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          API_URI: http://${{ secrets.DEPLOY_HOST_RESTAPI }}:5000/api
          CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET}}
          CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY}}
          CLOUDINARY_UPLOAD_PRESET: ${{secrets.CLOUDINARY_UPLOAD_PRESET}}
          CLOUDINARY_UPLOAD_URL: ${{secrets.CLOUDINARY_UPLOAD_URL}}
          CLOUDINARY_DELETE_URL: ${{secrets.CLOUDINARY_DELETE_URL}}
        with:
          name: eloyasr/tfg/webapp
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PUSH_TOKEN }}
          registry: ghcr.io
          workdir: webapp
          buildargs: API_URI CLOUDINARY_API_SECRET CLOUDINARY_API_KEY CLOUDINARY_UPLOAD_PRESET CLOUDINARY_UPLOAD_URL CLOUDINARY_DELETE_URL

  docker-push-restapi:
    name: Push restapi Docker Image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          MONGODB_ATLAS: ${{secrets.MONGODB_ATLAS}}
          SECRETORPRIVATEKEY: ${{secrets.SECRET_OR_PRIVATE_KEY}}
          RIOT_APIKEY: ${{secrets.RIOT_APIKEY}}
          RIOT_ACCOUNT_QUERY: https://europe.api.riotgames.com/riot/account/v1/accounts/by-riot-id/
          SUMMONER_ACCOUNT_QUERY: https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-puuid/
          MASTERY_QUERY: https://euw1.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-puuid/
          RANKEDS_QUERY: https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/
          CHAMPIONS_QUERY: http://ddragon.leagueoflegends.com/cdn/14.10.1/data/en_US/champion.json
          GAMES_QUERY: https://europe.api.riotgames.com/lol/match/v5/matches/by-puuid/
          GAME_QUERY: https://europe.api.riotgames.com/lol/match/v5/matches/
        with:
          name: eloyasr/tfg/restapi
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PUSH_TOKEN }}
          registry: ghcr.io
          workdir: restapi
          buildargs: MONGODB_ATLAS SECRETORPRIVATEKEY RIOT_APIKEY SUMMONER_ACCOUNT_QUERY MASTERY_QUERY RANKEDS_QUERY CHAMPIONS_QUERY GAMES_QUERY GAME_QUERY

  deploy_rest_api:
    name: Deploy over SSH RESTAPI
    runs-on: ubuntu-latest
    needs: [docker-push-restapi]
    steps:
      - name: Deploy over SSH
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST_RESTAPI }}
          user: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command: |
            echo ${{secrets.DOCKER_PUSH_TOKEN}} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            wget https://raw.githubusercontent.com/eloyasr/tfg/master/docker-compose-deploy-restapi.yml -O docker-compose.yml
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker-compose pull   
            sudo docker-compose up -d

  deploy_web_app:
    name: Deploy over SSH WEBAPP
    runs-on: ubuntu-latest
    needs: [docker-push-webapp]
    steps:
      - name: Deploy over SSH
        uses: fifsky/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST_WEBAPP }}
          user: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command: |
            echo ${{secrets.DOCKER_PUSH_TOKEN}} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin
            wget https://raw.githubusercontent.com/eloyasr/tfg/master/docker-compose-deploy-webapp.yml -O docker-compose.yml
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker-compose pull   
            sudo docker-compose up -d
